The gcc C compiler generates the following assembly code:

short test_one(unsigned short x)
x in %rdi

1   test_one:
2     movl $1, %eax
3     jmp .L5
4   .L6:
5     xorq %rdi, %rax
6     shrq %rdi Shift right by 1
7   .L5:
8     testq %rdi, %rdi
9     jne .L6
10    andl $0, %eax
11    ret


A: This is transformed using the jump-to-middle strategy.
B: 
short test_one(unsigned short x) {
  short val = 1;
  while (x > 0) {
    val ^= x;
    x >>= 1;
  }
  return val;
}

C: x를 2로 나누어가며 val에 ^ 연산을 적용하는 거는 알겠는데, 의도를 모르겠다.