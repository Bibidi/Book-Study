A. Write a goto version in C that performs the same computation and mimics
the control flow of the assembly code, in the style shown in Figure 3.16(b).

void cond(short a, short *p)
{
  if (!a)
    goto false;
  if (*p >= a)
    goto false;
  *p = a;
  return;
  
false:
  reutnr;    
}


B. Explain why the assembly code contains two conditional branches, even
though the C code has only one if statement.

or 연산은 왼쪽 값이 참이면 오른쪽 값을 평가하지 않고 바로 1을 반환한다. 그 기능을 구현하기 위해
conditional branch를 두 개로 갈라놓았다.